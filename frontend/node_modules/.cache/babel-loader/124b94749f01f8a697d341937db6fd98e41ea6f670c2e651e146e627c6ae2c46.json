{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\e-learning\\\\frontend\\\\src\\\\components\\\\StudentDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [comments, setComments] = useState('');\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const studentId = 1; // Replace with dynamic ID from token or context\n\n  useEffect(() => {\n    const fetchCourses = async () => {\n      try {\n        const response = await axios.get(`http://localhost/e-learning/backend/view_courses.php?student_id=${studentId}`);\n        setCourses(response.data);\n      } catch (error) {\n        console.error('Error fetching courses:', error);\n      }\n    };\n    fetchCourses();\n  }, []);\n  const handleEnroll = async courseId => {\n    try {\n      const response = await axios.post('http://localhost/e-learning/backend/enroll.php', {\n        student_id: studentId,\n        course_id: courseId\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error enrolling in course:', error);\n    }\n  };\n  const handleAssignmentUpload = async (courseId, file) => {\n    const formData = new FormData();\n    formData.append('course_id', courseId);\n    formData.append('student_id', studentId);\n    formData.append('assignment', file);\n    try {\n      const response = await axios.post('http://localhost/e-learning/backend/upload_assignment.php', formData);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error uploading assignment:', error);\n    }\n  };\n  const handlePostComment = async isPrivate => {\n    try {\n      const response = await axios.post('http://localhost/e-learning/backend/post_comment.php', {\n        course_id: selectedCourse,\n        student_id: studentId,\n        content: comments,\n        is_private: isPrivate\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: courses.map(course => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [course.course_name, \" - \", course.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEnroll(course.course_id),\n          children: \"Enroll\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCourse(course.course_id),\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, course.course_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedCourse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submit Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => handleAssignmentUpload(selectedCourse, e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Post Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comments,\n        onChange: e => setComments(e.target.value),\n        placeholder: \"Write your comment here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePostComment(false),\n        children: \"Post Public Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePostComment(true),\n        children: \"Post Private Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"/6FFIA2ob4wWyZVoZonbsybGlsY=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","courses","setCourses","comments","setComments","selectedCourse","setSelectedCourse","studentId","fetchCourses","response","get","data","error","console","handleEnroll","courseId","post","student_id","course_id","alert","message","handleAssignmentUpload","file","formData","FormData","append","handlePostComment","isPrivate","content","is_private","children","fileName","_jsxFileName","lineNumber","columnNumber","map","course","course_name","description","onClick","type","onChange","e","target","files","value","placeholder","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/e-learning/frontend/src/components/StudentDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst StudentDashboard = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [comments, setComments] = useState('');\r\n  const [selectedCourse, setSelectedCourse] = useState(null);\r\n  const studentId = 1; // Replace with dynamic ID from token or context\r\n\r\n  useEffect(() => {\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost/e-learning/backend/view_courses.php?student_id=${studentId}`\r\n        );\r\n        setCourses(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching courses:', error);\r\n      }\r\n    };\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const handleEnroll = async (courseId) => {\r\n    try {\r\n      const response = await axios.post('http://localhost/e-learning/backend/enroll.php', {\r\n        student_id: studentId,\r\n        course_id: courseId,\r\n      });\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error enrolling in course:', error);\r\n    }\r\n  };\r\n\r\n  const handleAssignmentUpload = async (courseId, file) => {\r\n    const formData = new FormData();\r\n    formData.append('course_id', courseId);\r\n    formData.append('student_id', studentId);\r\n    formData.append('assignment', file);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost/e-learning/backend/upload_assignment.php',\r\n        formData\r\n      );\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error uploading assignment:', error);\r\n    }\r\n  };\r\n\r\n  const handlePostComment = async (isPrivate) => {\r\n    try {\r\n      const response = await axios.post('http://localhost/e-learning/backend/post_comment.php', {\r\n        course_id: selectedCourse,\r\n        student_id: studentId,\r\n        content: comments,\r\n        is_private: isPrivate,\r\n      });\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error('Error posting comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student Dashboard</h1>\r\n      <h2>Available Courses</h2>\r\n      <ul>\r\n        {courses.map((course) => (\r\n          <li key={course.course_id}>\r\n            {course.course_name} - {course.description}\r\n            <button onClick={() => handleEnroll(course.course_id)}>Enroll</button>\r\n            <button onClick={() => setSelectedCourse(course.course_id)}>View</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {selectedCourse && (\r\n        <div>\r\n          <h3>Submit Assignment</h3>\r\n          <input\r\n            type=\"file\"\r\n            onChange={(e) => handleAssignmentUpload(selectedCourse, e.target.files[0])}\r\n          />\r\n          <h3>Post Comment</h3>\r\n          <textarea\r\n            value={comments}\r\n            onChange={(e) => setComments(e.target.value)}\r\n            placeholder=\"Write your comment here\"\r\n          />\r\n          <button onClick={() => handlePostComment(false)}>Post Public Comment</button>\r\n          <button onClick={() => handlePostComment(true)}>Post Private Comment</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}